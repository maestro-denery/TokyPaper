From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Denery <dorofeevij@gmail.com>
Date: Mon, 30 May 2022 22:40:08 +0300
Subject: [PATCH] PreServer-API


diff --git a/src/main/java/net/drf/drfpaper/DRFPaper.java b/src/main/java/net/drf/drfpaper/DRFPaper.java
index ac107913ad88e29f1f54e71f7c64fb65ef6040a6..ad14143b9769a33446b0a9086f5740e97a5fea1f 100644
--- a/src/main/java/net/drf/drfpaper/DRFPaper.java
+++ b/src/main/java/net/drf/drfpaper/DRFPaper.java
@@ -1,10 +1,13 @@
 package net.drf.drfpaper;
 
+import net.drf.drfpaper.api.server.PreServer;
 import net.drf.drfpaper.loader.CorePluginLoader;
 import org.jetbrains.annotations.NotNull;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
+import java.util.Optional;
+
 /**
  * A main DRFPaper class containing API info, accesses to APIs and info shared between plugins.
  */
@@ -13,15 +16,26 @@ public final class DRFPaper {
 	public static final DRFPaper INSTANCE = new DRFPaper();
 	public static final Logger logger = LoggerFactory.getLogger("DRFPaper");
 	private CorePluginLoader corePluginLoader;
+	private PreServer preServer;
 
 	@NotNull
 	public CorePluginLoader getCorePluginLoader() {
 		return corePluginLoader;
 	}
 
+	public Optional<PreServer> getPreServer() {
+		return Optional.ofNullable(preServer);
+	}
+
 	public void setCorePluginLoader(@NotNull final CorePluginLoader corePluginLoader) {
 		if (this.corePluginLoader != null)
 			throw new UnsupportedOperationException("Cannot redefine core plugin loader twice!");
 		this.corePluginLoader = corePluginLoader;
 	}
+
+	public void setPreServer(@NotNull final PreServer preServer) {
+		if (this.preServer != null)
+			throw new UnsupportedOperationException("Cannot redefine preServer twice!");
+		this.preServer = preServer;
+	}
 }
diff --git a/src/main/java/net/drf/drfpaper/api/server/PreServer.java b/src/main/java/net/drf/drfpaper/api/server/PreServer.java
new file mode 100644
index 0000000000000000000000000000000000000000..bbdc830290db10171b52f14e500132f5cde97099
--- /dev/null
+++ b/src/main/java/net/drf/drfpaper/api/server/PreServer.java
@@ -0,0 +1,35 @@
+package net.drf.drfpaper.api.server;
+
+import org.jetbrains.annotations.NotNull;
+
+import java.io.File;
+
+/**
+ * Represents server before DedicatedServer initialization, providing methods for manipulating vanilla server before bukkit api initialization.
+ */
+public interface PreServer {
+	@NotNull
+	String getMinecraftVersion();
+
+	void reloadData();
+
+	File getWorldContainer();
+
+	boolean isPrimaryThread();
+
+	int getCurrentTick();
+
+	void setIdleTimeout(int threshold);
+
+	int getIdleTimeout();
+
+	double[] getTPS();
+
+	long[] getTickTimes();
+
+	double getAverageTickTime();
+
+	boolean isStopping();
+
+	void shutdown();
+}
diff --git a/src/main/java/org/bukkit/Server.java b/src/main/java/org/bukkit/Server.java
index 743a4091e06015b303d1eebc3b6bd393f98e4b9f..545059ff283a5cf791acebd92180e8c030f88d98 100644
--- a/src/main/java/org/bukkit/Server.java
+++ b/src/main/java/org/bukkit/Server.java
@@ -58,7 +58,7 @@ import org.jetbrains.annotations.Nullable;
 /**
  * Represents a server implementation.
  */
-public interface Server extends PluginMessageRecipient, net.kyori.adventure.audience.ForwardingAudience { // Paper
+public interface Server extends PluginMessageRecipient, net.kyori.adventure.audience.ForwardingAudience, net.drf.drfpaper.api.server.PreServer { // Paper // DRFPaper - PreServer API.
 
     /**
      * Returns the de facto plugins directory, generally used for storing plugin jars to be loaded,
